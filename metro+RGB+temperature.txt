// Servo 0 Green
// Servo 45 Yellow

#include <MeMCore.h>

// Initialize temperature sensor
MeTemperature temperatureSensor(PORT_1); // Assume the temperature sensor is connected to PORT_1

// RGB LED lights
MeRGBLed led(PORT_2, 4); // Initialize RGB LED lights, specifying the number as 4

// Servo
MePort port(PORT_1);
Servo myservo1; // Create a servo object to control the servo
int16_t servo1pin = port.pin1(); // Connect the servo to SLOT1 of PORT_1

unsigned long startTime;  // Record the start time of the program

void setLEDColor(uint8_t red, uint8_t green, uint8_t blue) {
  for(uint8_t t = 0; t < 4; t++) { // Iterate through 4 LED lights
    led.setColorAt(t, red, green, blue); // Set the color of each LED light
  }
  led.show();
}

void setup() {
  // Initialize serial communication
  Serial.begin(9600);

  // Initialize LED lights
  led.show();

  // Initialize the servo
  myservo1.attach(servo1pin);

  // Record the start time of the program
  startTime = millis();
}

void loop() {
  // Get the current time
  unsigned long currentTime = millis();
  
  // Stop the program if it has been running for more than 10 seconds
  if (currentTime - startTime > 10000) {
    return;
  }

  // Read the temperature value
  float temperature = temperatureSensor.temperature();

  // Output the temperature value
  Serial.print("Temperature: ");
  Serial.print(temperature);
  Serial.println(" C");

  // Control the servo and output the angle value
  setLEDColor(255, 255, 0); // Set LED lights to yellow to indicate the servo is moving
  myservo1.write(0);      // Set servo 1 to 0 degrees
  Serial.println("Servo 1 Angle: 0 degrees");
  delay(2000);            // Wait for 2 seconds

  setLEDColor(0, 255, 0); // Set LED lights to green to indicate the servo is moving
  myservo1.write(45);     // Set servo 1 to 45 degrees
  Serial.println("Servo 1 Angle: 45 degrees");
  delay(2000);            // Wait for 2 seconds

  setLEDColor(0, 255, 0); // Set LED lights to green to indicate the servo is not moving
}
